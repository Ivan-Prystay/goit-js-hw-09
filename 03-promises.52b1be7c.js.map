{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IArCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3B,IAAKF,EAAMG,OAAS,IAAMF,EAAKE,OAAS,IAAMD,EAAOC,OAAS,EAC5D,OAAOvB,EAAAwB,OAAOC,QAAQ,4BAIxB,IADA,IAAMC,GAAcN,EAAMG,MACjBI,EAAI,EAAGA,GAAKL,EAAOC,MAAOI,GAAK,EAAG,CACzC,IAAMC,EAAQF,IAAcL,EAAKE,MAAQI,EACzCzB,EAAcyB,EAAI,EAAGC,GAClBC,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAAwB,OAAOO,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAAwB,OAAOC,QAAQ,sBAAqCO,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGhEW,EAAMG,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  if (+delay.value <= 0 || +step.value <= 0 || +amount.value <= 0) {\n    return Notify.failure('Please enter numbers > 0');\n  }\n\n  const startDelay = +delay.value;\n  for (let i = 0; i < +amount.value; i += 1) {\n    const delay = startDelay + +step.value * i;\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay2","step","amount","value","Notify","failure","startDelay","i","delay1","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.52b1be7c.js.map"}